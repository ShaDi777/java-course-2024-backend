/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.generated.tables.records;


import edu.java.domain.jooq.generated.tables.LinkStackoverflow;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class LinkStackoverflowRecord extends UpdatableRecordImpl<LinkStackoverflowRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.link_stackoverflow.link_id</code>.
     */
    public void setLinkId(@NotNull Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.link_stackoverflow.link_id</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getLinkId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.link_stackoverflow.comments_count</code>.
     */
    public void setCommentsCount(@Nullable Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.link_stackoverflow.comments_count</code>.
     */
    @Nullable
    public Integer getCommentsCount() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.link_stackoverflow.answers_count</code>.
     */
    public void setAnswersCount(@Nullable Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.link_stackoverflow.answers_count</code>.
     */
    @Nullable
    public Integer getAnswersCount() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.link_stackoverflow.is_answered</code>.
     */
    public void setIsAnswered(@Nullable Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.link_stackoverflow.is_answered</code>.
     */
    @Nullable
    public Boolean getIsAnswered() {
        return (Boolean) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LinkStackoverflowRecord
     */
    public LinkStackoverflowRecord() {
        super(LinkStackoverflow.LINK_STACKOVERFLOW);
    }

    /**
     * Create a detached, initialised LinkStackoverflowRecord
     */
    @ConstructorProperties({ "linkId", "commentsCount", "answersCount", "isAnswered" })
    public LinkStackoverflowRecord(@NotNull Long linkId, @Nullable Integer commentsCount, @Nullable Integer answersCount, @Nullable Boolean isAnswered) {
        super(LinkStackoverflow.LINK_STACKOVERFLOW);

        setLinkId(linkId);
        setCommentsCount(commentsCount);
        setAnswersCount(answersCount);
        setIsAnswered(isAnswered);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised LinkStackoverflowRecord
     */
    public LinkStackoverflowRecord(edu.java.domain.jooq.generated.tables.pojos.LinkStackoverflow value) {
        super(LinkStackoverflow.LINK_STACKOVERFLOW);

        if (value != null) {
            setLinkId(value.getLinkId());
            setCommentsCount(value.getCommentsCount());
            setAnswersCount(value.getAnswersCount());
            setIsAnswered(value.getIsAnswered());
            resetChangedOnNotNull();
        }
    }
}
